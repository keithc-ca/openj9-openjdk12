# ===========================================================================
# (c) Copyright IBM Corp. 2018, 2019 All Rights Reserved
# ===========================================================================
# This code is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.
#
# IBM designates this particular file as subject to the "Classpath" exception
# as provided by IBM in the LICENSE file that accompanied this code.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details (a copy is included in the LICENSE file that
# accompanied this code).
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, see <http://www.gnu.org/licenses/>.
# ===========================================================================

default :
	$(error DDR.gmk has no default target)

.PHONY : generate build_jar

ifeq (,$(wildcard $(SPEC)))
  $(error DDR.gmk needs SPEC set to a proper spec.gmk)
endif

include $(SPEC)
include $(TOPDIR)/make/common/MakeBase.gmk
include $(TOPDIR)/make/common/JavaCompilation.gmk
include $(TOPDIR)/make/common/SetupJavaCompilers.gmk

# Supporting definitions.
DDR_SUPPORT_DIR := $(SUPPORT_OUTPUTDIR)/ddr
DDR_CLASSES_BIN := $(DDR_SUPPORT_DIR)/classes
DDR_CLASSES_GEN := $(DDR_SUPPORT_DIR)/classes-generated
DDR_VM_SRC_ROOT := $(OPENJ9_TOPDIR)/debugtools/DDR_VM/src

#############################################################################

# Build the class generator.
$(eval $(call SetupJavaCompilation,BUILD_DDR_TOOLS, \
	SETUP := GENERATE_OLDBYTECODE, \
	BIN := $(DDR_SUPPORT_DIR)/tools, \
	CLASSPATH := $(addprefix $(JDK_OUTPUTDIR)/modules/, java.base openj9.dtfj), \
	SRC := $(DDR_VM_SRC_ROOT), \
	INCLUDE_FILES := $(addsuffix .java,$(subst .,/, \
		com.ibm.j9ddr.BytecodeGenerator \
		com.ibm.j9ddr.CTypeParser \
		com.ibm.j9ddr.StructureHeader \
		com.ibm.j9ddr.StructureReader \
		com.ibm.j9ddr.StructureTypeManager \
		com.ibm.j9ddr.logging.LoggerNames \
		com.ibm.j9ddr.tools.ClassGenerator \
		com.ibm.j9ddr.tools.FlagStructureList \
		com.ibm.j9ddr.tools.store.J9DDRStructureStore \
		com.ibm.j9ddr.tools.store.StructureKey \
		com.ibm.j9ddr.tools.store.StructureMismatchError \
		)) \
	))

#############################################################################

# The blob is built with the VM.
DDR_BLOB_FILE := $(OUTPUTDIR)/vm/j9ddr.dat

# A marker file that signals that the generated classes are up to date.
DDR_CLASSES_MARKER := $(DDR_SUPPORT_DIR)/generate.done

# $(DDR_VM_SRC_ROOT) is on the classpath as it contributes StructureAliases29.dat
DDR_GENERATOR_CLASSPATH := $(call PathList, $(BUILD_DDR_TOOLS_BIN) $(DDR_VM_SRC_ROOT))

$(DDR_CLASSES_MARKER) : $(DDR_BLOB_FILE) $(BUILD_DDR_TOOLS)
	@$(ECHO) Generating DDR pointer and structure classes
	@$(RM) -rf $(DDR_CLASSES_GEN)
	$(JAVA) -classpath $(DDR_GENERATOR_CLASSPATH) \
		com.ibm.j9ddr.tools.ClassGenerator \
			--blob=$(DDR_BLOB_FILE) \
			--out=$(DDR_CLASSES_GEN)
	$(TOUCH) $@

generate : $(DDR_CLASSES_MARKER)

#############################################################################

# We depend upon the generated classes.
DDR_CLASSPATH := $(DDR_CLASSES_GEN)

# We also depend upon class files from these modules.
DDR_CLASSPATH += $(addprefix $(JDK_OUTPUTDIR)/modules/, \
		java.base \
		java.desktop \
		openj9.dtfj \
		openj9.traceformat \
	)

DDR_SRC_EXCLUDES := com/ibm/j9ddr/tools/ant

ifeq (,$(filter mz31 mz64,$(OPENJ9_PLATFORM_CODE)))
DDR_SRC_EXCLUDES += com/ibm/j9ddr/corereaders/tdump
endif

# Exclude source generated by legacy tool, if present.
DDR_SRC_EXCLUDES += $(addprefix com/ibm/j9ddr/vm29/, pointer/generated structure)

$(eval $(call SetupJavaCompilation,BUILD_DDR_CLASSES, \
	SETUP := GENERATE_USINGJDKBYTECODE, \
	BIN := $(DDR_CLASSES_BIN), \
	CLASSPATH := $(DDR_CLASSPATH), \
	SRC := $(OPENJ9_TOPDIR)/debugtools/DDR_VM/src, \
	EXCLUDES := $(DDR_SRC_EXCLUDES), \
	COPY := \
		com/ibm/j9ddr/StructureAliases29.dat \
		com/ibm/j9ddr/StructureAliases29-edg.dat \
	))

$(eval $(call SetupJarArchive,BUILD_DDR_JAR, \
	DEPENDENCIES := $(BUILD_DDR_CLASSES), \
	SRCS := $(DDR_CLASSES_BIN), \
	SUFFIXES := .class .dat .properties, \
	JAR := $(call FindLibDirForModule, openj9.dtfj)/ddr/j9ddr.jar \
	))

build_jar : $(BUILD_DDR_JAR)
